version: "3.8"

services:
  # === Streamlit App ===
  streamlit:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: streamlit_app
    restart: always
    ports:
      - "8501:8501"
    volumes:
      - ./:/app
    environment:
      - STREAMLIT_SERVER_HEADLESS=true
      - STREAMLIT_SERVER_PORT=8501
      - PYTHONUNBUFFERED=1
    depends_on:
      - postgres
      - minio
    networks:
      - miamigo_net

  # === N8N Main Instance ===
  n8n:
    image: n8nio/n8n:1.114.4
    restart: always
    environment:
      DB_TYPE: postgresdb
      DB_POSTGRESDB_HOST: postgres
      DB_POSTGRESDB_PORT: 5432
      DB_POSTGRESDB_DATABASE: n8n
      DB_POSTGRESDB_USER: n8n
      DB_POSTGRESDB_PASSWORD: n8npass

      # Queue Mode
      QUEUE_MODE: "true"
      QUEUE_REDIS_HOST: redis
      EXECUTIONS_PROCESS: "main"
      EXECUTIONS_DATA_SAVE_MANUAL_EXECUTIONS: "all"

      # MinIO (pour stockage fichiers)
      N8N_FILES_HOST: "http://minio:9000"
      N8N_FILES_BUCKET_NAME: "n8n"
      N8N_FILES_ACCESS_KEY_ID: minio
      N8N_FILES_SECRET_ACCESS_KEY: minio123

      # Webhook / tunnel
      WEBHOOK_TUNNEL_URL: "http://localhost:5678"
    ports:
      - "5678:5678"
    depends_on:
      - redis
      - postgres
      - minio
    volumes:
      - n8ndata:/home/node/.n8n
    networks:
      - miamigo_net

  # === N8N Worker ===
  n8n-worker:
    image: n8nio/n8n:1.114.4
    restart: always
    environment:
      DB_TYPE: postgresdb
      DB_POSTGRESDB_HOST: postgres
      DB_POSTGRESDB_PORT: 5432
      DB_POSTGRESDB_DATABASE: n8n
      DB_POSTGRESDB_USER: n8n
      DB_POSTGRESDB_PASSWORD: n8npass

      # Queue Mode
      QUEUE_MODE: "true"
      QUEUE_REDIS_HOST: redis
      EXECUTIONS_PROCESS: "main"

      # MinIO
      N8N_FILES_HOST: "http://minio:9000"
      N8N_FILES_BUCKET_NAME: "n8n"
      N8N_FILES_ACCESS_KEY_ID: minio
      N8N_FILES_SECRET_ACCESS_KEY: minio123
    depends_on:
      - redis
      - postgres
      - minio
    volumes:
      - n8ndata:/home/node/.n8n
    networks:
      - miamigo_net

  # === Redis ===
  redis:
    image: redis:7
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data
    networks:
      - miamigo_net

  # === Postgres ===
  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: n8n
      POSTGRES_PASSWORD: n8npass
      POSTGRES_DB: n8n
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - miamigo_net

  # === MinIO ===
  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    restart: always
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    ports:
      - "9000:9000"   # API S3
      - "9001:9001"   # Console web
    volumes:
      - miniodata:/data
    networks:
      - miamigo_net

# === Volumes persistants ===
volumes:
  n8ndata:
  redisdata:
  pgdata:
  miniodata:

# === Réseau partagé ===
networks:
  miamigo_net:
    driver: bridge
